apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-utilities
  labels:
    app: dev-utilities
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dev-utilities
  template:
    metadata:
      labels:
        app: dev-utilities
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: dev-utilities
        image: dev-utilities:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: LOG_LEVEL
          value: "info"
        - name: AUTH_METHOD
          value: "api_key"
        - name: AUTH_API_KEYS
          valueFrom:
            secretKeyRef:
              name: dev-utilities-secrets
              key: api-keys
        - name: RATE_LIMIT_STORE
          value: "redis"
        - name: RATE_LIMIT_REDIS_URL
          valueFrom:
            secretKeyRef:
              name: dev-utilities-secrets
              key: redis-url
        - name: GIN_MODE
          value: "release"
        - name: SECRETS_MOUNT_PATH
          value: "/etc/secrets"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: secrets
        secret:
          secretName: dev-utilities-secrets
          defaultMode: 0400
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: dev-utilities
  labels:
    app: dev-utilities
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: dev-utilities

---
apiVersion: v1
kind: Secret
metadata:
  name: dev-utilities-secrets
type: Opaque
data:
  # Base64 encoded values
  # echo -n "key1,key2,key3" | base64
  api-keys: a2V5MSxrZXkyLGtleTM=
  # echo -n "redis://redis-service:6379" | base64
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dev-utilities-netpol
spec:
  podSelector:
    matchLabels:
      app: dev-utilities
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-system
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dev-utilities-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dev-utilities